services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "admin"
    volumes:
      - mongo_data:/data/db
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh admin --quiet
      interval: 10s
      retries: 5

  mongodb_view:
    image: mongo-express
    container_name: mongodb_view
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_ADMINUSERNAME: "admin"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "admin"
      ME_CONFIG_MONGODB_AUTH_DATABASE: "admin"
    restart: always

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.dev
    command: npm run start:dev
    volumes:
      - ../backend:/app
      - /app/node_modules
    ports:
      - "8080:8080"
    depends_on:
      mongo:
        condition: service_healthy

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.dev
    container_name: frontend
    command: npm run dev
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true

  postgres_sonarqube:
    image: postgres:17
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonarqube_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 10s
      retries: 5

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres_sonarqube:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    depends_on:
      postgres_sonarqube:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9000/api/system/status | grep -q UP" ]
      interval: 30s
      retries: 5

volumes:
  mongo_data:
  sonarqube_db:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
